-- 		 SELECT CLAUSE

USE sql_store;

SELECT *
FROM customers
WHERE customer_id = 1
ORDER BY first_name;


SELECT 
	last_name,
    first_name,
    (points + 10) * 100 AS New_Name
FROM customers;

SELECT DISTINCT state 
FROM customers;

SELECT 
	name, 
    unit_price,
    unit_price * 1.1 AS 'new price'
FROM products;

-- ----------------------		WHERE CLAUSE

-- > , >=, =, != or <>

--				YEAR_MONTH_DATE
SELECT * 
FROM customers
WHERE birth_date > '1990-01-01' ;

SELECT *
FROM orders
WHERE order_date >= '2019-01-01' ;

-- ----------------------		OR AND NOT

 SELECT *
 FROM order_items
 WHERE order_id = 6 AND quantity * unit_price > 30;

-- ----------------------		IN OPERATOR and NOT IN

SELECT *
FROM customers
WHERE state IN ('VA', 'FL', 'GA');

SELECT *
FROM products
WHERE quantity_in_stock IN (49,38,72);

-- ----------------------		BETWEEN OPERATOR

SELECT *
FROM customers
WHERE points BETWEEN 1000 AND 3000;
-- works with date also

-- ----------------------		LIKE OPERATOR

-- 			LIKE operator is old and advance version is aviable % and _

SELECT *
FROM customers
WHERE last_name LIKE 'b%';
--				ALL entries whose last_name starts with b OR B

SELECT *
FROM customers
WHERE last_name LIKE '%b%';
-- 				ALL entries whose last_name contains b or B


SELECT *
FROM customers
WHERE last_name LIKE '_e%';
--				ALL entries whose last name second letter is e

-- NOTE -> there is nothing like IN LIKE or LIKE IN  beware

-- ----------------------		REGEXP OPERATOR

SELECT *
FROM customers
-- WHERE last_name LIKE '%field%'; 
WHERE last_name REGEXP 'field';

--			%field% in LIKE is same as just field in REGEXP
-- 		^ -> Starting of string 
--		$ -> Ending of string
--		| -> (pipe)		last_name REGEXP 'field|mac|caf'; 
--		[] 
--		[a-h]

SELECT *
FROM customers
WHERE last_name REGEXP '^field|mac|rose';
-- find all quesries whose starting is field mac or rose


SELECT *
FROM customers
WHERE last_name REGEXP 'field$|mac|rose';
-- find all quesries whose has mac or rose or field,but field is at end

SELECT *
FROM customers
WHERE last_name REGEXP '[gim]e';
--	any entry contain ge,ie,me

SELECT *
FROM customers
WHERE last_name REGEXP '[a-h]e';

SELECT *
FROM customers
WHERE first_name REGEXP '^ELKA|AMBUR';

SELECT *
FROM customers
WHERE last_name REGEXP 'EY$|ON$';

SELECT *
FROM customers
WHERE last_name REGEXP '^MY' OR last_name REGEXP 'SE';

SELECT *
FROM customers
WHERE last_name REGEXP 'B[RU]'; 

     

-- ----------------------		NULL OPERATOR

SELECT *
FROM customers
WHERE phone IS NULL;
--	WHERE phone IS NOT NULL;


SELECT *
FROM orders
WHERE shipper_id IS NULL;


-- ----------------------		ORDER BY CLAUSE

SELECT *
FROM customers
ORDER BY first_name DESC;

 SELECT *
FROM customers
ORDER BY state DESC, first_name DESC;


SELECT first_name, last_name, 10 AS points
FROM customers
ORDER BY points, first_name;


SELECT first_name, last_name, 10 AS points
FROM customers
ORDER BY first_name, last_name;
-- ORDER BY 1,2;

SELECT * , quantity * unit_price AS total_prize
FROM order_items
WHERE order_id = 2
ORDER BY quantity * unit_price DESC ;

-- ----------------------		LIMIT 

SELECT * 
FROM customers
LIMIT 3;
-- page 1: 1-3 
-- page 2: 4-6
-- page 3: 7-9

-- LIMIT 6,3 
-- 6 is number of value to skip than take 3 entires

SELECT * 
FROM customers
ORDER BY points DESC
LIMIT 3;

-- ----------------------		INNER JOIN

SELECT order_id, first_name, last_name
FROM orders
JOIN customers 
	ON orders.customer_id = customers.customer_id; 
    
-- attribute similiar in both table remeber to mention which table

SELECT order_id, ord.customer_id, first_name, last_name
FROM orders ord
JOIN customers cus
	ON ord.customer_id = cus.customer_id; 
    

SELECT order_id, oi.product_id, name, quantity, oi.unit_price
FROM order_items oi
JOIN products pro
	ON oi.product_id = pro.product_id;


-- ----------------------		JOING Across DATA base



SELECT *
FROM order_items oi
JOIN sql_inventory.products p
	ON oi.product_id = p.product_id

-- different data use

-- USE sql_inventory;

-- SELECT *
-- FROM sql_order.order_items oi
-- JOIN products p
-- 	ON oi.product_id = p.product_id

-- ----------------------		SELF JOIN

USE sql_hr;

SELECT 
	e1.employee_id, 
    e1.first_name ,
    e2.employee_id as Manager_id, 
    e2.first_name as manager_name
FROM employees e1
JOIN employees e2
	ON e1.reports_to = e2.employee_id;


-- ----------------------		JOINING MULTIPLE TABLES

USE sql_store;

SELECT 
	o.order_id,
    o.order_date,
    c.first_name,
    c.last_name,
    os.name AS status
FROM orders o
JOIN customers c
	ON o.customer_id = c.customer_id
JOIN order_statuses os
	ON o.status = os.order_status_id;
    

    
-- ----------------------		JOINING MULTIPLE TABLES

USE sql_invoicing;
 
SELECT 
	c.name as Client_Name, 
	pm.name as Payment_method
FROM payments p
JOIN 
	clients c
    ON 
		p.client_id = c.client_id 
JOIN
	payment_methods pm
	ON 
		p.payment_method = pm.payment_method_id;
    
-- ----------------------		Compound JOIN Condition

USE sql_store;

SELECT *
FROM orders o
JOIN customers c
	ON o.customer_id = c.customer_id;
    AND <Second Condition>

-- ----------------------		Implicit Join Syntax

USE sql_store;

SELECT *
FROM orders o
JOIN customers c
	ON o.customer_id = c.customer_id;


--	Implicit Join Syntax 

SELECT *
FROM order o, customes c
WHERE o.customer_id = c.customer_id;
-- InCase you forgot where claus we will end up with Cross JOIN
 

